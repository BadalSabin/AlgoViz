<?xml version="1.0" encoding="UTF-8"?>
<ui version="4.0">
 <class>StackViewClass</class>
 <widget class="QWidget" name="StackViewClass">
  <property name="geometry">
   <rect>
    <x>0</x>
    <y>0</y>
    <width>1093</width>
    <height>515</height>
   </rect>
  </property>
  <property name="windowTitle">
   <string>Form</string>
  </property>
  <widget class="QWidget" name="layoutWidget">
   <property name="geometry">
    <rect>
     <x>5</x>
     <y>0</y>
     <width>691</width>
     <height>97</height>
    </rect>
   </property>
   <layout class="QVBoxLayout" name="stackHeaderAndControlPane">
    <item>
     <widget class="QLabel" name="stackHeaderLabel">
      <property name="layoutDirection">
       <enum>Qt::RightToLeft</enum>
      </property>
      <property name="text">
       <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;&lt;span style=&quot; font-size:11pt; font-weight:600;&quot;&gt;STACK&lt;/span&gt;&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
      </property>
      <property name="alignment">
       <set>Qt::AlignCenter</set>
      </property>
     </widget>
    </item>
    <item>
     <layout class="QHBoxLayout" name="stackControlPane">
      <item>
       <widget class="QLineEdit" name="stackInsertLineEdit"/>
      </item>
      <item>
       <widget class="QPushButton" name="stackPushBtn">
        <property name="text">
         <string>Push</string>
        </property>
       </widget>
      </item>
      <item>
       <widget class="Line" name="stackPushPopSepLine">
        <property name="orientation">
         <enum>Qt::Vertical</enum>
        </property>
       </widget>
      </item>
      <item>
       <widget class="QPushButton" name="stackPopBtn">
        <property name="enabled">
         <bool>true</bool>
        </property>
        <property name="text">
         <string>Pop</string>
        </property>
       </widget>
      </item>
     </layout>
    </item>
   </layout>
  </widget>
  <widget class="QLabel" name="stackInfoConsoleLabel">
   <property name="geometry">
    <rect>
     <x>715</x>
     <y>300</y>
     <width>47</width>
     <height>21</height>
    </rect>
   </property>
   <property name="text">
    <string>Theory:</string>
   </property>
  </widget>
  <widget class="QLabel" name="stackConsoleLabel">
   <property name="geometry">
    <rect>
     <x>715</x>
     <y>100</y>
     <width>47</width>
     <height>21</height>
    </rect>
   </property>
   <property name="text">
    <string>Console:</string>
   </property>
  </widget>
  <widget class="QWidget" name="stackAnimAreaPane" native="true">
   <property name="geometry">
    <rect>
     <x>5</x>
     <y>100</y>
     <width>691</width>
     <height>411</height>
    </rect>
   </property>
   <widget class="QGraphicsView" name="stackAnimArea">
    <property name="geometry">
     <rect>
      <x>0</x>
      <y>0</y>
      <width>701</width>
      <height>411</height>
     </rect>
    </property>
   </widget>
  </widget>
  <widget class="QPushButton" name="stackHomeBtn">
   <property name="geometry">
    <rect>
     <x>705</x>
     <y>0</y>
     <width>75</width>
     <height>23</height>
    </rect>
   </property>
   <property name="text">
    <string>Home</string>
   </property>
  </widget>
  <widget class="QPlainTextEdit" name="stackPlainTextEdit">
   <property name="geometry">
    <rect>
     <x>715</x>
     <y>120</y>
     <width>371</width>
     <height>171</height>
    </rect>
   </property>
   <property name="readOnly">
    <bool>true</bool>
   </property>
  </widget>
  <widget class="QTextBrowser" name="stackInfoTextBrowser">
   <property name="geometry">
    <rect>
     <x>715</x>
     <y>320</y>
     <width>371</width>
     <height>191</height>
    </rect>
   </property>
   <property name="html">
    <string>&lt;!DOCTYPE HTML PUBLIC &quot;-//W3C//DTD HTML 4.0//EN&quot; &quot;http://www.w3.org/TR/REC-html40/strict.dtd&quot;&gt;
&lt;html&gt;&lt;head&gt;&lt;meta name=&quot;qrichtext&quot; content=&quot;1&quot; /&gt;&lt;style type=&quot;text/css&quot;&gt;
p, li { white-space: pre-wrap; }
&lt;/style&gt;&lt;/head&gt;&lt;body style=&quot; font-family:'MS Shell Dlg 2'; font-size:8.25pt; font-weight:400; font-style:normal;&quot;&gt;
&lt;h1 style=&quot; margin-top:0px; margin-bottom:12px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; background-color:#ffffff;&quot;&gt;&lt;span style=&quot; font-family:'Helvetica','sans-serif'; font-size:22pt; font-weight:600; color:#610b38;&quot;&gt;What is a Stack?&lt;/span&gt;&lt;span style=&quot; font-size:8pt; font-weight:600;&quot;&gt; &lt;/span&gt;&lt;/h1&gt;
&lt;p style=&quot; margin-top:12px; margin-bottom:12px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; background-color:#ffffff;&quot;&gt;&lt;span style=&quot; font-family:'Segoe UI','sans-serif'; font-size:8pt; color:#333333;&quot;&gt;A Stack is a linear data structure that follows the &lt;/span&gt;&lt;span style=&quot; font-family:'Segoe UI','sans-serif'; font-size:8pt; font-weight:600; color:#333333;&quot;&gt;LIFO (Last-In-First-Out)&lt;/span&gt;&lt;span style=&quot; font-family:'Segoe UI','sans-serif'; font-size:8pt; color:#333333;&quot;&gt; principle. Stack has one end, whereas the Queue has two ends (&lt;/span&gt;&lt;span style=&quot; font-family:'Segoe UI','sans-serif'; font-size:8pt; font-weight:600; color:#333333;&quot;&gt;front and rear&lt;/span&gt;&lt;span style=&quot; font-family:'Segoe UI','sans-serif'; font-size:8pt; color:#333333;&quot;&gt;). It contains only one pointer &lt;/span&gt;&lt;span style=&quot; font-family:'Segoe UI','sans-serif'; font-size:8pt; font-weight:600; color:#333333;&quot;&gt;top pointer&lt;/span&gt;&lt;span style=&quot; font-family:'Segoe UI','sans-serif'; font-size:8pt; color:#333333;&quot;&gt; pointing to the topmost element of the stack. Whenever an element is added in the stack, it is added on the top of the stack, and the element can be deleted only from the stack. In other words, a &lt;/span&gt;&lt;span style=&quot; font-family:'Segoe UI','sans-serif'; font-size:8pt; font-weight:600; font-style:italic; color:#333333;&quot;&gt;stack can be defined as a container in which insertion and deletion can be done from the one end known as the top of the stack.&lt;/span&gt;&lt;span style=&quot; font-size:8pt;&quot;&gt; &lt;/span&gt;&lt;/p&gt;
&lt;h3 style=&quot; margin-top:14px; margin-bottom:12px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; background-color:#ffffff;&quot;&gt;&lt;span style=&quot; font-family:'Helvetica','sans-serif'; font-size:16pt; font-weight:600; color:#610b4b;&quot;&gt;Some key points related to stack&lt;/span&gt;&lt;span style=&quot; font-size:8pt; font-weight:600;&quot;&gt; &lt;/span&gt;&lt;/h3&gt;
&lt;ul type=&quot;circle&quot; style=&quot;margin-top: 0px; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; -qt-list-indent: 1;&quot;&gt;&lt;li style=&quot; font-size:8pt; color:#000000; background-color:#ffffff;&quot; style=&quot; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;&lt;span style=&quot; font-family:'Segoe UI','sans-serif';&quot;&gt;It is called as stack because it behaves like a real-world stack, piles of books, etc.&lt;/span&gt; &lt;/li&gt;
&lt;li style=&quot; font-size:8pt; color:#000000; background-color:#ffffff;&quot; style=&quot; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;&lt;span style=&quot; font-family:'Segoe UI','sans-serif';&quot;&gt;A Stack is an abstract data type with a pre-defined capacity, which means that it can store the elements of a limited size.&lt;/span&gt; &lt;/li&gt;
&lt;li style=&quot; font-size:8pt; color:#000000; background-color:#ffffff;&quot; style=&quot; margin-top:0px; margin-bottom:12px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;&lt;span style=&quot; font-family:'Segoe UI','sans-serif';&quot;&gt;It is a data structure that follows some order to insert and delete the elements, and that order can be LIFO or FILO.&lt;/span&gt; &lt;/li&gt;&lt;/ul&gt;
&lt;p style=&quot; margin-top:12px; margin-bottom:12px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; background-color:#ffffff;&quot;&gt;&lt;span style=&quot; font-family:'Helvetica','sans-serif'; font-size:16pt; color:#610b4b;&quot;&gt;Standard Stack Operations&lt;/span&gt;&lt;span style=&quot; font-size:8pt;&quot;&gt; &lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot; margin-top:12px; margin-bottom:12px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; background-color:#ffffff;&quot;&gt;&lt;span style=&quot; font-family:'Segoe UI','sans-serif'; font-size:12pt; font-weight:600; color:#333333;&quot;&gt;The following are some common operations implemented on the stack:&lt;/span&gt;&lt;span style=&quot; font-size:8pt;&quot;&gt; &lt;/span&gt;&lt;/p&gt;
&lt;ul type=&quot;circle&quot; style=&quot;margin-top: 0px; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; -qt-list-indent: 1;&quot;&gt;&lt;li style=&quot; font-size:8pt; color:#000000; background-color:#ffffff;&quot; style=&quot; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;&lt;span style=&quot; font-family:'Segoe UI','sans-serif'; font-size:12pt; font-weight:600;&quot;&gt;push():&lt;/span&gt;&lt;span style=&quot; font-family:'Segoe UI','sans-serif'; font-size:12pt;&quot;&gt; When we insert an element in a stack then the operation is known as a push. If the stack is full then the overflow condition occurs.&lt;/span&gt; &lt;/li&gt;
&lt;li style=&quot; font-size:8pt; color:#000000; background-color:#ffffff;&quot; style=&quot; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;&lt;span style=&quot; font-family:'Segoe UI','sans-serif'; font-size:12pt; font-weight:600;&quot;&gt;pop():&lt;/span&gt;&lt;span style=&quot; font-family:'Segoe UI','sans-serif'; font-size:12pt;&quot;&gt; When we delete an element from the stack, the operation is known as a pop. If the stack is empty means that no element exists in the stack, this state is known as an underflow state.&lt;/span&gt; &lt;/li&gt;
&lt;li style=&quot; font-size:8pt; color:#000000; background-color:#ffffff;&quot; style=&quot; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;&lt;span style=&quot; font-family:'Segoe UI','sans-serif'; font-size:12pt; font-weight:600;&quot;&gt;isEmpty():&lt;/span&gt;&lt;span style=&quot; font-family:'Segoe UI','sans-serif'; font-size:12pt;&quot;&gt; It determines whether the stack is empty or not.&lt;/span&gt; &lt;/li&gt;
&lt;li style=&quot; font-size:8pt; color:#000000; background-color:#ffffff;&quot; style=&quot; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;&lt;span style=&quot; font-family:'Segoe UI','sans-serif'; font-size:12pt; font-weight:600;&quot;&gt;isFull():&lt;/span&gt;&lt;span style=&quot; font-family:'Segoe UI','sans-serif'; font-size:12pt;&quot;&gt; It determines whether the stack is full or not.'&lt;/span&gt; &lt;/li&gt;
&lt;li style=&quot; font-size:8pt; color:#000000; background-color:#ffffff;&quot; style=&quot; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;&lt;span style=&quot; font-family:'Segoe UI','sans-serif'; font-size:12pt; font-weight:600;&quot;&gt;peek():&lt;/span&gt;&lt;span style=&quot; font-family:'Segoe UI','sans-serif'; font-size:12pt;&quot;&gt; It returns the element at the given position.&lt;/span&gt; &lt;/li&gt;
&lt;li style=&quot; font-size:8pt; color:#000000; background-color:#ffffff;&quot; style=&quot; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;&lt;span style=&quot; font-family:'Segoe UI','sans-serif'; font-size:12pt; font-weight:600;&quot;&gt;count():&lt;/span&gt;&lt;span style=&quot; font-family:'Segoe UI','sans-serif'; font-size:12pt;&quot;&gt; It returns the total number of elements available in a stack.&lt;/span&gt; &lt;/li&gt;
&lt;li style=&quot; font-size:8pt; color:#000000; background-color:#ffffff;&quot; style=&quot; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;&lt;span style=&quot; font-family:'Segoe UI','sans-serif'; font-size:12pt; font-weight:600;&quot;&gt;change():&lt;/span&gt;&lt;span style=&quot; font-family:'Segoe UI','sans-serif'; font-size:12pt;&quot;&gt; It changes the element at the given position.&lt;/span&gt; &lt;/li&gt;
&lt;li style=&quot; font-size:8pt; color:#000000; background-color:#ffffff;&quot; style=&quot; margin-top:0px; margin-bottom:12px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;&lt;span style=&quot; font-family:'Segoe UI','sans-serif'; font-size:12pt; font-weight:600;&quot;&gt;display():&lt;/span&gt;&lt;span style=&quot; font-family:'Segoe UI','sans-serif'; font-size:12pt;&quot;&gt; It prints all the elements available in the stack.&lt;/span&gt; &lt;/li&gt;&lt;/ul&gt;
&lt;p style=&quot; margin-top:0px; margin-bottom:12px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; background-color:#ffffff;&quot;&gt;&lt;span style=&quot; font-family:'Segoe UI','sans-serif'; font-size:12pt; color:#000000;&quot;&gt; &lt;/span&gt;&lt;span style=&quot; font-size:8pt;&quot;&gt; &lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot; margin-top:0px; margin-bottom:12px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; background-color:#ffffff;&quot;&gt;&lt;span style=&quot; font-family:'Segoe UI','sans-serif'; font-size:12pt; color:#000000;&quot;&gt; &lt;/span&gt;&lt;span style=&quot; font-size:8pt;&quot;&gt; &lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot; margin-top:12px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; background-color:#ffffff;&quot;&gt;&lt;span style=&quot; font-family:'Arial','sans-serif'; font-size:15pt; font-weight:600; color:#434343;&quot;&gt;Time Complexity of a Stack storing ‘N’ elements&lt;/span&gt;&lt;span style=&quot; font-size:8pt;&quot;&gt; &lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; background-color:#ffffff;&quot;&gt;&lt;span style=&quot; font-family:'Symbol'; font-size:10pt; color:#616161;&quot;&gt;·&lt;/span&gt;&lt;span style=&quot; font-family:'Times New Roman'; font-size:7pt; color:#616161;&quot;&gt;         &lt;/span&gt;&lt;span style=&quot; font-family:'Arial','sans-serif'; font-size:12pt; color:#000000;&quot;&gt;To access or edit any element stored in a stack, the time taken is &lt;/span&gt;&lt;span style=&quot; font-family:'Arial','sans-serif'; font-size:12pt; font-weight:600; color:#000000;&quot;&gt;O(N)&lt;/span&gt;&lt;span style=&quot; font-family:'Arial','sans-serif'; font-size:12pt; color:#000000;&quot;&gt; as to reach any specific element, all the elements before it has to be removed. &lt;/span&gt;&lt;span style=&quot; font-size:8pt;&quot;&gt; &lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; background-color:#ffffff;&quot;&gt;&lt;span style=&quot; font-family:'Symbol'; font-size:10pt; color:#616161;&quot;&gt;·&lt;/span&gt;&lt;span style=&quot; font-family:'Times New Roman'; font-size:7pt; color:#616161;&quot;&gt;         &lt;/span&gt;&lt;span style=&quot; font-family:'Arial','sans-serif'; font-size:12pt; color:#000000;&quot;&gt;The searching operation also takes a total time of &lt;/span&gt;&lt;span style=&quot; font-family:'Arial','sans-serif'; font-size:12pt; font-weight:600; color:#000000;&quot;&gt;O(N)&lt;/span&gt;&lt;span style=&quot; font-family:'Arial','sans-serif'; font-size:12pt; color:#000000;&quot;&gt;, as reaching any specific element isn’t possible without popping the elements stored before it.&lt;/span&gt;&lt;span style=&quot; font-size:8pt;&quot;&gt; &lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; background-color:#ffffff;&quot;&gt;&lt;span style=&quot; font-family:'Symbol'; font-size:10pt; color:#616161;&quot;&gt;·&lt;/span&gt;&lt;span style=&quot; font-family:'Times New Roman'; font-size:7pt; color:#616161;&quot;&gt;         &lt;/span&gt;&lt;span style=&quot; font-family:'Arial','sans-serif'; font-size:12pt; color:#000000;&quot;&gt;Operations like insertion or deletion in a stack take constant time i.e.&lt;/span&gt;&lt;span style=&quot; font-family:'Arial','sans-serif'; font-size:12pt; font-weight:600; color:#000000;&quot;&gt; O(1)&lt;/span&gt;&lt;span style=&quot; font-family:'Arial','sans-serif'; font-size:12pt; color:#000000;&quot;&gt;.&lt;/span&gt;&lt;span style=&quot; font-size:8pt;&quot;&gt; &lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot; margin-top:12px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; background-color:#ffffff;&quot;&gt;&lt;span style=&quot; font-family:'Arial','sans-serif'; font-size:15pt; font-weight:600; color:#434343;&quot;&gt;Space Complexity of Stack&lt;/span&gt;&lt;span style=&quot; font-size:8pt;&quot;&gt; &lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot; margin-top:12px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; background-color:#ffffff;&quot;&gt;&lt;span style=&quot; font-family:'Arial','sans-serif'; font-size:12pt; color:#000000;&quot;&gt;Space complexity for each operation in a stack is &lt;/span&gt;&lt;span style=&quot; font-family:'Arial','sans-serif'; font-size:12pt; font-weight:600; color:#000000;&quot;&gt;O(1)&lt;/span&gt;&lt;span style=&quot; font-family:'Arial','sans-serif'; font-size:12pt; color:#000000;&quot;&gt;, as no extra space is required for any operation.&lt;/span&gt;&lt;span style=&quot; font-size:8pt;&quot;&gt; &lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot; margin-top:0px; margin-bottom:12px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; background-color:#ffffff;&quot;&gt;&lt;span style=&quot; font-family:'Segoe UI','sans-serif'; font-size:12pt; color:#000000;&quot;&gt; &lt;/span&gt;&lt;span style=&quot; font-size:8pt;&quot;&gt; &lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot; margin-top:12px; margin-bottom:12px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;&lt;span style=&quot; font-size:8pt;&quot;&gt;  &lt;/span&gt;&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
   </property>
  </widget>
  <widget class="Line" name="stackAnimTextAreaSeparator">
   <property name="geometry">
    <rect>
     <x>690</x>
     <y>100</y>
     <width>31</width>
     <height>411</height>
    </rect>
   </property>
   <property name="orientation">
    <enum>Qt::Vertical</enum>
   </property>
  </widget>
 </widget>
 <resources/>
 <connections/>
</ui>
