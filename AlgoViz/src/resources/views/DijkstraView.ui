<?xml version="1.0" encoding="UTF-8"?>
<ui version="4.0">
 <class>DijkstraViewClass</class>
 <widget class="QWidget" name="DijkstraViewClass">
  <property name="geometry">
   <rect>
    <x>0</x>
    <y>0</y>
    <width>1097</width>
    <height>529</height>
   </rect>
  </property>
  <property name="windowTitle">
   <string>Form</string>
  </property>
  <widget class="QLabel" name="dijkstraInfoConsoleLabel">
   <property name="geometry">
    <rect>
     <x>720</x>
     <y>310</y>
     <width>47</width>
     <height>21</height>
    </rect>
   </property>
   <property name="text">
    <string>Theory:</string>
   </property>
  </widget>
  <widget class="QLabel" name="dijkstraConsoleLabel">
   <property name="geometry">
    <rect>
     <x>720</x>
     <y>110</y>
     <width>47</width>
     <height>21</height>
    </rect>
   </property>
   <property name="text">
    <string>Console:</string>
   </property>
  </widget>
  <widget class="QTextBrowser" name="dijkstraInfoTextBrowser">
   <property name="geometry">
    <rect>
     <x>720</x>
     <y>330</y>
     <width>371</width>
     <height>191</height>
    </rect>
   </property>
   <property name="html">
    <string>&lt;!DOCTYPE HTML PUBLIC &quot;-//W3C//DTD HTML 4.0//EN&quot; &quot;http://www.w3.org/TR/REC-html40/strict.dtd&quot;&gt;
&lt;html&gt;&lt;head&gt;&lt;meta name=&quot;qrichtext&quot; content=&quot;1&quot; /&gt;&lt;style type=&quot;text/css&quot;&gt;
p, li { white-space: pre-wrap; }
&lt;/style&gt;&lt;/head&gt;&lt;body style=&quot; font-family:'MS Shell Dlg 2'; font-size:8.25pt; font-weight:400; font-style:normal;&quot;&gt;
&lt;p style=&quot; margin-top:12px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; background-color:#ffffff;&quot;&gt;&lt;span style=&quot; font-family:'-apple-system','BlinkMacSystemFont','Segoe UI Adjusted','Segoe UI','Liberation Sans','sans-serif'; font-size:8pt; color:#232629; background-color:#ffffff;&quot;&gt;Dijkstra's shortest path algorithm is&lt;/span&gt;&lt;span style=&quot; font-family:'-apple-system','BlinkMacSystemFont','Segoe UI Adjusted','Segoe UI','Liberation Sans','sans-serif'; font-size:8pt; color:#232629;&quot;&gt; &lt;/span&gt;&lt;span style=&quot; font-family:'Courier New'; font-size:8pt; color:#000000;&quot;&gt;O(ElogV)&lt;/span&gt;&lt;span style=&quot; font-family:'-apple-system','BlinkMacSystemFont','Segoe UI Adjusted','Segoe UI','Liberation Sans','sans-serif'; font-size:8pt; color:#232629;&quot;&gt; where:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin-top: 0px; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; -qt-list-indent: 1;&quot;&gt;&lt;li style=&quot; font-family:'inherit'; font-size:8pt; color:#232629;&quot; style=&quot; margin-top:0px; margin-bottom:0px; margin-left:30px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;&lt;span style=&quot; font-family:'Courier New'; font-size:15px; color:#000000;&quot;&gt;V&lt;/span&gt;&lt;span style=&quot; font-size:15px;&quot;&gt; is the number of vertices&lt;/span&gt;&lt;/li&gt;
&lt;li style=&quot; font-family:'inherit'; font-size:8pt; color:#232629;&quot; style=&quot; margin-top:0px; margin-bottom:0px; margin-left:30px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;&lt;span style=&quot; font-family:'Courier New'; font-size:15px; color:#000000;&quot;&gt;E&lt;/span&gt;&lt;span style=&quot; font-size:15px;&quot;&gt; is the total number of edges&lt;/span&gt;&lt;/li&gt;&lt;/ul&gt;
&lt;p style=&quot; margin-top:12px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; background-color:#ffffff;&quot;&gt;&lt;span style=&quot; font-family:'Helvetica','sans-serif'; font-size:19pt; font-weight:600; color:#000000;&quot;&gt;Dijkstra's Shortest Path Algorithm&lt;/span&gt;&lt;span style=&quot; font-size:8pt;&quot;&gt; &lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot; margin-top:12px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; background-color:#ffffff;&quot;&gt;&lt;span style=&quot; font-family:'Helvetica','sans-serif'; font-size:11.5pt; color:#000000;&quot;&gt;Shortest path problems are notoriously hard for humans to solve by hand, especially when they start to get complicated. Luckily, there is an algorithm devised by Edsgar Dijkstra (usually referred to as Dijkstra's Algorithm) that can find the shortest paths between two vertices in a graph. As you might imagine, it's tedious for humans to do by hand, but it isn't too inefficient for computers.&lt;/span&gt;&lt;span style=&quot; font-size:8pt;&quot;&gt; &lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot; margin-top:12px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; background-color:#ffffff;&quot;&gt;&lt;span style=&quot; font-family:'Helvetica','sans-serif'; font-size:11.5pt; color:#000000;&quot;&gt;Our implementation of Dijkstra's algorithm uses an iterator in such a way that each call to next returns a vertex &lt;/span&gt;&lt;span style=&quot; font-family:'Courier New'; font-size:10pt; color:#000000;&quot;&gt;v&lt;/span&gt;&lt;span style=&quot; font-family:'Helvetica','sans-serif'; font-size:11.5pt; color:#000000;&quot;&gt; for which the shortest path from the start vertex to &lt;/span&gt;&lt;span style=&quot; font-family:'Courier New'; font-size:10pt; color:#000000;&quot;&gt;v&lt;/span&gt;&lt;span style=&quot; font-family:'Helvetica','sans-serif'; font-size:11.5pt; color:#000000;&quot;&gt; is known for sure. This requires keeping track of how far &lt;/span&gt;&lt;span style=&quot; font-family:'Courier New'; font-size:10pt; color:#000000;&quot;&gt;w&lt;/span&gt;&lt;span style=&quot; font-family:'Helvetica','sans-serif'; font-size:11.5pt; color:#000000;&quot;&gt; is guessed to be from the start (for each fringe vertex &lt;/span&gt;&lt;span style=&quot; font-family:'Courier New'; font-size:10pt; color:#000000;&quot;&gt;w&lt;/span&gt;&lt;span style=&quot; font-family:'Helvetica','sans-serif'; font-size:11.5pt; color:#000000;&quot;&gt;) along with its predecessor along the shortest path from the start.&lt;/span&gt;&lt;span style=&quot; font-size:8pt;&quot;&gt; &lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;-qt-paragraph-type:empty; margin-top:12px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-size:8pt; background-color:#ffffff;&quot;&gt;&lt;br /&gt;&lt;/p&gt;
&lt;p style=&quot; margin-top:12px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; background-color:#ffffff;&quot;&gt;&lt;span style=&quot; font-family:'Helvetica','sans-serif'; font-size:13.5pt; font-weight:600; color:#000000;&quot;&gt;Algorithm&lt;/span&gt;&lt;span style=&quot; font-size:8pt;&quot;&gt; &lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot; margin-top:12px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; background-color:#ffffff;&quot;&gt;&lt;span style=&quot; font-family:'Helvetica','sans-serif'; font-size:11.5pt; color:#000000;&quot;&gt;Note: The algorithm below finds the shortest paths from a starting vertex to all other nodes in a graph. To find the shortest path between two specified vertices &lt;/span&gt;&lt;span style=&quot; font-family:'Courier New'; font-size:10pt; color:#000000;&quot;&gt;s&lt;/span&gt;&lt;span style=&quot; font-family:'Helvetica','sans-serif'; font-size:11.5pt; color:#000000;&quot;&gt; and &lt;/span&gt;&lt;span style=&quot; font-family:'Courier New'; font-size:10pt; color:#000000;&quot;&gt;t&lt;/span&gt;&lt;span style=&quot; font-family:'Helvetica','sans-serif'; font-size:11.5pt; color:#000000;&quot;&gt;, simply terminate the algorithm after &lt;/span&gt;&lt;span style=&quot; font-family:'Courier New'; font-size:10pt; color:#000000;&quot;&gt;t&lt;/span&gt;&lt;span style=&quot; font-family:'Helvetica','sans-serif'; font-size:11.5pt; color:#000000;&quot;&gt; has been returned by a call to next instead of waiting for hasNext to return false.&lt;/span&gt;&lt;span style=&quot; font-size:8pt;&quot;&gt; &lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot; margin-top:12px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; background-color:#eeeeee;&quot;&gt;&lt;span style=&quot; font-family:'Courier New'; font-size:10pt; color:#000000;&quot;&gt;constructor&lt;/span&gt;&lt;span style=&quot; font-family:'Helvetica','sans-serif'; font-size:11.5pt; color:#000000;&quot;&gt;: Add the start vertex to the fringe with distance zero. Then, add all other vertices to the fringe with distance infinity (e.g. &lt;/span&gt;&lt;span style=&quot; font-family:'Courier New'; font-size:10pt; color:#000000;&quot;&gt;Integer.MAX_VALUE&lt;/span&gt;&lt;span style=&quot; font-family:'Helvetica','sans-serif'; font-size:11.5pt; color:#000000;&quot;&gt; or &lt;/span&gt;&lt;span style=&quot; font-family:'Courier New'; font-size:10pt; color:#000000;&quot;&gt;Double.POSITIVE_INFINITY&lt;/span&gt;&lt;span style=&quot; font-family:'Helvetica','sans-serif'; font-size:11.5pt; color:#000000;&quot;&gt;). This reflects the fact that we do not yet know any shortest path lengths from the start vertex to any of the other vertices.&lt;/span&gt;&lt;span style=&quot; font-size:8pt;&quot;&gt; &lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot; margin-top:12px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; background-color:#eeeeee;&quot;&gt;&lt;span style=&quot; font-family:'Courier New'; font-size:10pt; color:#000000;&quot;&gt;hasNext: return !fringe.isEmpty();&lt;/span&gt;&lt;span style=&quot; font-size:8pt;&quot;&gt; &lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot; margin-top:12px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; background-color:#eeeeee;&quot;&gt;&lt;span style=&quot; font-family:'Courier New'; font-size:10pt; color:#000000;&quot;&gt;next:&lt;/span&gt;&lt;span style=&quot; font-size:8pt;&quot;&gt; &lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; background-color:#eeeeee;&quot;&gt;&lt;span style=&quot; font-family:'Helvetica','sans-serif'; font-size:11.5pt; color:#000000;&quot;&gt;1.&lt;/span&gt;&lt;span style=&quot; font-family:'Times New Roman'; font-size:7pt; color:#000000;&quot;&gt;    &lt;/span&gt;&lt;span style=&quot; font-family:'Helvetica','sans-serif'; font-size:11.5pt; color:#000000;&quot;&gt;Remove and save the vertex &lt;/span&gt;&lt;span style=&quot; font-family:'Courier New'; font-size:10pt; color:#000000;&quot;&gt;v&lt;/span&gt;&lt;span style=&quot; font-family:'Helvetica','sans-serif'; font-size:11.5pt; color:#000000;&quot;&gt; in the fringe for which its current distance (the shortest distance to &lt;/span&gt;&lt;span style=&quot; font-family:'Courier New'; font-size:10pt; color:#000000;&quot;&gt;v&lt;/span&gt;&lt;span style=&quot; font-family:'Helvetica','sans-serif'; font-size:11.5pt; color:#000000;&quot;&gt; that we've found so far) is minimal. (One can prove that for this vertex, the shortest path from the start vertex to &lt;/span&gt;&lt;span style=&quot; font-family:'Courier New'; font-size:10pt; color:#000000;&quot;&gt;v&lt;/span&gt;&lt;span style=&quot; font-family:'Helvetica','sans-serif'; font-size:11.5pt; color:#000000;&quot;&gt; is known for sure.)&lt;/span&gt;&lt;span style=&quot; font-size:8pt;&quot;&gt; &lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; background-color:#eeeeee;&quot;&gt;&lt;span style=&quot; font-family:'Helvetica','sans-serif'; font-size:11.5pt; color:#000000;&quot;&gt;2.&lt;/span&gt;&lt;span style=&quot; font-family:'Times New Roman'; font-size:7pt; color:#000000;&quot;&gt;    &lt;/span&gt;&lt;span style=&quot; font-family:'Helvetica','sans-serif'; font-size:11.5pt; color:#000000;&quot;&gt;Then, for each neighbor &lt;/span&gt;&lt;span style=&quot; font-family:'Courier New'; font-size:10pt; color:#000000;&quot;&gt;w&lt;/span&gt;&lt;span style=&quot; font-family:'Helvetica','sans-serif'; font-size:11.5pt; color:#000000;&quot;&gt; of &lt;/span&gt;&lt;span style=&quot; font-family:'Courier New'; font-size:10pt; color:#000000;&quot;&gt;v&lt;/span&gt;&lt;span style=&quot; font-family:'Helvetica','sans-serif'; font-size:11.5pt; color:#000000;&quot;&gt;, do the following:&lt;/span&gt;&lt;span style=&quot; font-size:8pt;&quot;&gt; &lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; background-color:#eeeeee;&quot;&gt;&lt;span style=&quot; font-family:'Courier New'; font-size:10pt; color:#000000;&quot;&gt;o&lt;/span&gt;&lt;span style=&quot; font-family:'Times New Roman'; font-size:7pt; color:#000000;&quot;&gt;    &lt;/span&gt;&lt;span style=&quot; font-family:'Helvetica','sans-serif'; font-size:11.5pt; color:#000000;&quot;&gt;If &lt;/span&gt;&lt;span style=&quot; font-family:'Courier New'; font-size:10pt; color:#000000;&quot;&gt;w&lt;/span&gt;&lt;span style=&quot; font-family:'Helvetica','sans-serif'; font-size:11.5pt; color:#000000;&quot;&gt; is not in the fringe, do nothing (we've already found the shortest path from the start vertex to &lt;/span&gt;&lt;span style=&quot; font-family:'Courier New'; font-size:10pt; color:#000000;&quot;&gt;w&lt;/span&gt;&lt;span style=&quot; font-family:'Helvetica','sans-serif'; font-size:11.5pt; color:#000000;&quot;&gt;).&lt;/span&gt;&lt;span style=&quot; font-size:8pt;&quot;&gt; &lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; background-color:#eeeeee;&quot;&gt;&lt;span style=&quot; font-family:'Courier New'; font-size:10pt; color:#000000;&quot;&gt;o&lt;/span&gt;&lt;span style=&quot; font-family:'Times New Roman'; font-size:7pt; color:#000000;&quot;&gt;    &lt;/span&gt;&lt;span style=&quot; font-family:'Helvetica','sans-serif'; font-size:11.5pt; color:#000000;&quot;&gt;Otherwise, &lt;/span&gt;&lt;span style=&quot; font-family:'Courier New'; font-size:10pt; color:#000000;&quot;&gt;w&lt;/span&gt;&lt;span style=&quot; font-family:'Helvetica','sans-serif'; font-size:11.5pt; color:#000000;&quot;&gt;'s distance might need updating if the path through &lt;/span&gt;&lt;span style=&quot; font-family:'Courier New'; font-size:10pt; color:#000000;&quot;&gt;v&lt;/span&gt;&lt;span style=&quot; font-family:'Helvetica','sans-serif'; font-size:11.5pt; color:#000000;&quot;&gt; to &lt;/span&gt;&lt;span style=&quot; font-family:'Courier New'; font-size:10pt; color:#000000;&quot;&gt;w&lt;/span&gt;&lt;span style=&quot; font-family:'Helvetica','sans-serif'; font-size:11.5pt; color:#000000;&quot;&gt; is a shorter path than what we've seen so far. In that case, replace the distance for &lt;/span&gt;&lt;span style=&quot; font-family:'Courier New'; font-size:10pt; color:#000000;&quot;&gt;w&lt;/span&gt;&lt;span style=&quot; font-family:'Helvetica','sans-serif'; font-size:11.5pt; color:#000000;&quot;&gt;'s fringe entry with the distance from start to &lt;/span&gt;&lt;span style=&quot; font-family:'Courier New'; font-size:10pt; color:#000000;&quot;&gt;v&lt;/span&gt;&lt;span style=&quot; font-family:'Helvetica','sans-serif'; font-size:11.5pt; color:#000000;&quot;&gt; plus the weight of the edge &lt;/span&gt;&lt;span style=&quot; font-family:'Courier New'; font-size:10pt; color:#000000;&quot;&gt;(v,w)&lt;/span&gt;&lt;span style=&quot; font-family:'Helvetica','sans-serif'; font-size:11.5pt; color:#000000;&quot;&gt;, and replace its predecessor with &lt;/span&gt;&lt;span style=&quot; font-family:'Courier New'; font-size:10pt; color:#000000;&quot;&gt;v&lt;/span&gt;&lt;span style=&quot; font-family:'Helvetica','sans-serif'; font-size:11.5pt; color:#000000;&quot;&gt;.&lt;/span&gt;&lt;span style=&quot; font-size:8pt;&quot;&gt; &lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; background-color:#eeeeee;&quot;&gt;&lt;span style=&quot; font-family:'Helvetica','sans-serif'; font-size:11.5pt; color:#000000;&quot;&gt;3.&lt;/span&gt;&lt;span style=&quot; font-family:'Times New Roman'; font-size:7pt; color:#000000;&quot;&gt;    &lt;/span&gt;&lt;span style=&quot; font-family:'Helvetica','sans-serif'; font-size:11.5pt; color:#000000;&quot;&gt;Return the fringe entry for &lt;/span&gt;&lt;span style=&quot; font-family:'Courier New'; font-size:10pt; color:#000000;&quot;&gt;v&lt;/span&gt;&lt;span style=&quot; font-family:'Helvetica','sans-serif'; font-size:11.5pt; color:#000000;&quot;&gt;.&lt;/span&gt;&lt;span style=&quot; font-size:8pt;&quot;&gt; &lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot; margin-top:12px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; background-color:#ffffff;&quot;&gt;&lt;span style=&quot; font-family:'Helvetica','sans-serif'; font-size:11.5pt; color:#000000;&quot;&gt;Every time a vertex is removed from the fringe, that vertex's shortest path has been found and it is finalized. The algorithm ends when hasNext returns false.&lt;/span&gt;&lt;span style=&quot; font-size:8pt;&quot;&gt; &lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot; margin-top:12px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; background-color:#ffffff;&quot;&gt;&lt;span style=&quot; font-family:'Helvetica','sans-serif'; font-size:11.5pt; color:#000000;&quot;&gt;One caveat: &lt;/span&gt;&lt;span style=&quot; font-family:'Helvetica','sans-serif'; font-size:11.5pt; font-style:italic; color:#000000;&quot;&gt;Dijkstra's algorithm does not work in general if a graph has negative edge weights&lt;/span&gt;&lt;span style=&quot; font-family:'Helvetica','sans-serif'; font-size:11.5pt; color:#000000;&quot;&gt;, so don't try to use it on one.&lt;/span&gt;&lt;span style=&quot; font-size:8pt;&quot;&gt; &lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;-qt-paragraph-type:empty; margin-top:12px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-size:8pt; background-color:#ffffff;&quot;&gt;&lt;br /&gt;&lt;/p&gt;
&lt;p style=&quot; margin-top:12px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; background-color:#ffffff;&quot;&gt;&lt;span style=&quot; font-family:'Times New Roman','serif'; font-size:13.5pt; font-weight:600; color:#000000;&quot;&gt;Implementing Dijkstra's algorithm&lt;/span&gt;&lt;span style=&quot; font-size:8pt;&quot;&gt; &lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot; margin-top:12px; margin-bottom:12px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;&lt;span style=&quot; font-family:'Times New Roman','serif'; font-size:13.5pt; color:#000000;&quot;&gt;Dijkstra's algorithm maintains a min-priority queue of vertices, with their &lt;/span&gt;&lt;span style=&quot; font-family:'Courier New'; font-size:10pt; color:#000000;&quot;&gt;dist&lt;/span&gt;&lt;span style=&quot; font-family:'Times New Roman','serif'; font-size:13.5pt; color:#000000;&quot;&gt; values as the keys. It repeatedly extracts from the min-priority queue the vertex &lt;/span&gt;&lt;span style=&quot; font-family:'Times New Roman','serif'; font-size:13.5pt; font-style:italic; color:#000000;&quot;&gt;u&lt;/span&gt;&lt;span style=&quot; font-family:'Times New Roman','serif'; font-size:13.5pt; color:#000000;&quot;&gt; with the minimum &lt;/span&gt;&lt;span style=&quot; font-family:'Courier New'; font-size:10pt; color:#000000;&quot;&gt;dist&lt;/span&gt;&lt;span style=&quot; font-family:'Times New Roman','serif'; font-size:13.5pt; color:#000000;&quot;&gt; value of all those in the queue, and then it examines all edges leaving &lt;/span&gt;&lt;span style=&quot; font-family:'Times New Roman','serif'; font-size:13.5pt; font-style:italic; color:#000000;&quot;&gt;u&lt;/span&gt;&lt;span style=&quot; font-family:'Times New Roman','serif'; font-size:13.5pt; color:#000000;&quot;&gt;. If &lt;/span&gt;&lt;span style=&quot; font-family:'Times New Roman','serif'; font-size:13.5pt; font-style:italic; color:#000000;&quot;&gt;v&lt;/span&gt;&lt;span style=&quot; font-family:'Times New Roman','serif'; font-size:13.5pt; color:#000000;&quot;&gt; is adjacent to &lt;/span&gt;&lt;span style=&quot; font-family:'Times New Roman','serif'; font-size:13.5pt; font-style:italic; color:#000000;&quot;&gt;u&lt;/span&gt;&lt;span style=&quot; font-family:'Times New Roman','serif'; font-size:13.5pt; color:#000000;&quot;&gt; and taking the edge (&lt;/span&gt;&lt;span style=&quot; font-family:'Times New Roman','serif'; font-size:13.5pt; font-style:italic; color:#000000;&quot;&gt;u&lt;/span&gt;&lt;span style=&quot; font-family:'Times New Roman','serif'; font-size:13.5pt; color:#000000;&quot;&gt;, &lt;/span&gt;&lt;span style=&quot; font-family:'Times New Roman','serif'; font-size:13.5pt; font-style:italic; color:#000000;&quot;&gt;v&lt;/span&gt;&lt;span style=&quot; font-family:'Times New Roman','serif'; font-size:13.5pt; color:#000000;&quot;&gt;) can decrease &lt;/span&gt;&lt;span style=&quot; font-family:'Times New Roman','serif'; font-size:13.5pt; font-style:italic; color:#000000;&quot;&gt;v&lt;/span&gt;&lt;span style=&quot; font-family:'Times New Roman','serif'; font-size:13.5pt; color:#000000;&quot;&gt;'s &lt;/span&gt;&lt;span style=&quot; font-family:'Courier New'; font-size:10pt; color:#000000;&quot;&gt;dist&lt;/span&gt;&lt;span style=&quot; font-family:'Times New Roman','serif'; font-size:13.5pt; color:#000000;&quot;&gt; value, then we put edge (&lt;/span&gt;&lt;span style=&quot; font-family:'Times New Roman','serif'; font-size:13.5pt; font-style:italic; color:#000000;&quot;&gt;u&lt;/span&gt;&lt;span style=&quot; font-family:'Times New Roman','serif'; font-size:13.5pt; color:#000000;&quot;&gt;, &lt;/span&gt;&lt;span style=&quot; font-family:'Times New Roman','serif'; font-size:13.5pt; font-style:italic; color:#000000;&quot;&gt;v&lt;/span&gt;&lt;span style=&quot; font-family:'Times New Roman','serif'; font-size:13.5pt; color:#000000;&quot;&gt;) into the shortest-path tree (for now, at least), and adjust &lt;/span&gt;&lt;span style=&quot; font-family:'Courier New'; font-size:10pt; color:#000000;&quot;&gt;v.dist&lt;/span&gt;&lt;span style=&quot; font-family:'Times New Roman','serif'; font-size:13.5pt; color:#000000;&quot;&gt; and &lt;/span&gt;&lt;span style=&quot; font-family:'Courier New'; font-size:10pt; color:#000000;&quot;&gt;v.pred&lt;/span&gt;&lt;span style=&quot; font-family:'Times New Roman','serif'; font-size:13.5pt; color:#000000;&quot;&gt;. Let's denote the weight of edge (&lt;/span&gt;&lt;span style=&quot; font-family:'Times New Roman','serif'; font-size:13.5pt; font-style:italic; color:#000000;&quot;&gt;u&lt;/span&gt;&lt;span style=&quot; font-family:'Times New Roman','serif'; font-size:13.5pt; color:#000000;&quot;&gt;, &lt;/span&gt;&lt;span style=&quot; font-family:'Times New Roman','serif'; font-size:13.5pt; font-style:italic; color:#000000;&quot;&gt;v&lt;/span&gt;&lt;span style=&quot; font-family:'Times New Roman','serif'; font-size:13.5pt; color:#000000;&quot;&gt;) by &lt;/span&gt;&lt;span style=&quot; font-family:'Courier New'; font-size:10pt; color:#000000;&quot;&gt;w(u,v)&lt;/span&gt;&lt;span style=&quot; font-family:'Times New Roman','serif'; font-size:13.5pt; color:#000000;&quot;&gt;. We can encapsulate what we do for each edge in a &lt;/span&gt;&lt;span style=&quot; font-family:'Times New Roman','serif'; font-size:13.5pt; font-weight:600; color:#000000;&quot;&gt;relaxation step&lt;/span&gt;&lt;span style=&quot; font-family:'Times New Roman','serif'; font-size:13.5pt; color:#000000;&quot;&gt;, with the following pseudocode:&lt;/span&gt;&lt;span style=&quot; font-size:8pt;&quot;&gt; &lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot; margin-top:12px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;&lt;span style=&quot; font-family:'Courier New'; font-size:10pt; color:#902000;&quot;&gt;void&lt;/span&gt;&lt;span style=&quot; font-family:'Courier New'; font-size:10pt; color:#000000;&quot;&gt; &lt;/span&gt;&lt;span style=&quot; font-family:'Courier New'; font-size:10pt; color:#06287e;&quot;&gt;relax&lt;/span&gt;&lt;span style=&quot; font-family:'Courier New'; font-size:10pt; color:#000000;&quot;&gt;(u, v) {&lt;/span&gt;&lt;span style=&quot; font-size:8pt;&quot;&gt; &lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot; margin-top:12px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;&lt;span style=&quot; font-family:'Courier New'; font-size:10pt; color:#000000;&quot;&gt;  &lt;/span&gt;&lt;span style=&quot; font-family:'Courier New'; font-size:10pt; font-weight:600; color:#007020;&quot;&gt;if&lt;/span&gt;&lt;span style=&quot; font-family:'Courier New'; font-size:10pt; color:#000000;&quot;&gt; (u.&lt;/span&gt;&lt;span style=&quot; font-family:'Courier New'; font-size:10pt; color:#06287e;&quot;&gt;dist&lt;/span&gt;&lt;span style=&quot; font-family:'Courier New'; font-size:10pt; color:#000000;&quot;&gt; + &lt;/span&gt;&lt;span style=&quot; font-family:'Courier New'; font-size:10pt; color:#06287e;&quot;&gt;w&lt;/span&gt;&lt;span style=&quot; font-family:'Courier New'; font-size:10pt; color:#000000;&quot;&gt;(u,v) &amp;lt; v.&lt;/span&gt;&lt;span style=&quot; font-family:'Courier New'; font-size:10pt; color:#06287e;&quot;&gt;dist&lt;/span&gt;&lt;span style=&quot; font-family:'Courier New'; font-size:10pt; color:#000000;&quot;&gt;) {&lt;/span&gt;&lt;span style=&quot; font-size:8pt;&quot;&gt; &lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot; margin-top:12px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;&lt;span style=&quot; font-family:'Courier New'; font-size:10pt; color:#000000;&quot;&gt;    v.&lt;/span&gt;&lt;span style=&quot; font-family:'Courier New'; font-size:10pt; color:#06287e;&quot;&gt;dist&lt;/span&gt;&lt;span style=&quot; font-family:'Courier New'; font-size:10pt; color:#000000;&quot;&gt; = u.&lt;/span&gt;&lt;span style=&quot; font-family:'Courier New'; font-size:10pt; color:#06287e;&quot;&gt;dist&lt;/span&gt;&lt;span style=&quot; font-family:'Courier New'; font-size:10pt; color:#000000;&quot;&gt; + &lt;/span&gt;&lt;span style=&quot; font-family:'Courier New'; font-size:10pt; color:#06287e;&quot;&gt;w&lt;/span&gt;&lt;span style=&quot; font-family:'Courier New'; font-size:10pt; color:#000000;&quot;&gt;(u,v);&lt;/span&gt;&lt;span style=&quot; font-size:8pt;&quot;&gt; &lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot; margin-top:12px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;&lt;span style=&quot; font-family:'Courier New'; font-size:10pt; color:#000000;&quot;&gt;    v.&lt;/span&gt;&lt;span style=&quot; font-family:'Courier New'; font-size:10pt; color:#06287e;&quot;&gt;pred&lt;/span&gt;&lt;span style=&quot; font-family:'Courier New'; font-size:10pt; color:#000000;&quot;&gt; = u;&lt;/span&gt;&lt;span style=&quot; font-size:8pt;&quot;&gt; &lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot; margin-top:12px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;&lt;span style=&quot; font-family:'Courier New'; font-size:10pt; color:#000000;&quot;&gt;  }&lt;/span&gt;&lt;span style=&quot; font-size:8pt;&quot;&gt; &lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot; margin-top:12px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;&lt;span style=&quot; font-family:'Courier New'; font-size:10pt; color:#000000;&quot;&gt;}&lt;/span&gt;&lt;span style=&quot; font-size:8pt;&quot;&gt; &lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot; margin-top:12px; margin-bottom:12px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;&lt;span style=&quot; font-family:'Times New Roman','serif'; font-size:13.5pt; color:#000000;&quot;&gt;Whenever a vertex's &lt;/span&gt;&lt;span style=&quot; font-family:'Courier New'; font-size:10pt; color:#000000;&quot;&gt;dist&lt;/span&gt;&lt;span style=&quot; font-family:'Times New Roman','serif'; font-size:13.5pt; color:#000000;&quot;&gt; value decreases, the min-priority queue must be adjusted accordingly.&lt;/span&gt;&lt;span style=&quot; font-size:8pt;&quot;&gt; &lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot; margin-top:12px; margin-bottom:12px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;&lt;span style=&quot; font-family:'Times New Roman','serif'; font-size:13.5pt; color:#000000;&quot;&gt;Here is pseudocode for Dijkstra's algorithm, assuming that the source vertex is &lt;/span&gt;&lt;span style=&quot; font-family:'Times New Roman','serif'; font-size:13.5pt; font-style:italic; color:#000000;&quot;&gt;s&lt;/span&gt;&lt;span style=&quot; font-family:'Times New Roman','serif'; font-size:13.5pt; color:#000000;&quot;&gt;:&lt;/span&gt;&lt;span style=&quot; font-size:8pt;&quot;&gt; &lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot; margin-top:12px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;&lt;span style=&quot; font-family:'Courier New'; font-size:10pt; color:#902000;&quot;&gt;void&lt;/span&gt;&lt;span style=&quot; font-family:'Courier New'; font-size:10pt; color:#000000;&quot;&gt; &lt;/span&gt;&lt;span style=&quot; font-family:'Courier New'; font-size:10pt; color:#06287e;&quot;&gt;dijkstra&lt;/span&gt;&lt;span style=&quot; font-family:'Courier New'; font-size:10pt; color:#000000;&quot;&gt;(s) {&lt;/span&gt;&lt;span style=&quot; font-size:8pt;&quot;&gt; &lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot; margin-top:12px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;&lt;span style=&quot; font-family:'Courier New'; font-size:10pt; color:#000000;&quot;&gt;  queue = &lt;/span&gt;&lt;span style=&quot; font-family:'Courier New'; font-size:10pt; font-weight:600; color:#007020;&quot;&gt;new&lt;/span&gt;&lt;span style=&quot; font-family:'Courier New'; font-size:10pt; color:#000000;&quot;&gt; PriorityQueue&amp;lt;Vertex&amp;gt;();&lt;/span&gt;&lt;span style=&quot; font-size:8pt;&quot;&gt; &lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot; margin-top:12px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;&lt;span style=&quot; font-family:'Courier New'; font-size:10pt; color:#000000;&quot;&gt;  &lt;/span&gt;&lt;span style=&quot; font-family:'Courier New'; font-size:10pt; font-weight:600; color:#007020;&quot;&gt;for&lt;/span&gt;&lt;span style=&quot; font-family:'Courier New'; font-size:10pt; color:#000000;&quot;&gt; (each vertex v) {&lt;/span&gt;&lt;span style=&quot; font-size:8pt;&quot;&gt; &lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot; margin-top:12px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;&lt;span style=&quot; font-family:'Courier New'; font-size:10pt; color:#000000;&quot;&gt;    v.&lt;/span&gt;&lt;span style=&quot; font-family:'Courier New'; font-size:10pt; color:#06287e;&quot;&gt;dist&lt;/span&gt;&lt;span style=&quot; font-family:'Courier New'; font-size:10pt; color:#000000;&quot;&gt; = infinity;  &lt;/span&gt;&lt;span style=&quot; font-family:'Courier New'; font-size:10pt; font-style:italic; color:#60a0b0;&quot;&gt;// can use Integer.MAX_VALUE or Double.POSITIVE_INFINITY&lt;/span&gt;&lt;span style=&quot; font-size:8pt;&quot;&gt; &lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot; margin-top:12px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;&lt;span style=&quot; font-family:'Courier New'; font-size:10pt; color:#000000;&quot;&gt;    queue.&lt;/span&gt;&lt;span style=&quot; font-family:'Courier New'; font-size:10pt; color:#06287e;&quot;&gt;enqueue&lt;/span&gt;&lt;span style=&quot; font-family:'Courier New'; font-size:10pt; color:#000000;&quot;&gt;(v);&lt;/span&gt;&lt;span style=&quot; font-size:8pt;&quot;&gt; &lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot; margin-top:12px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;&lt;span style=&quot; font-family:'Courier New'; font-size:10pt; color:#000000;&quot;&gt;    v.&lt;/span&gt;&lt;span style=&quot; font-family:'Courier New'; font-size:10pt; color:#06287e;&quot;&gt;pred&lt;/span&gt;&lt;span style=&quot; font-family:'Courier New'; font-size:10pt; color:#000000;&quot;&gt; = &lt;/span&gt;&lt;span style=&quot; font-family:'Courier New'; font-size:10pt; font-weight:600; color:#007020;&quot;&gt;null&lt;/span&gt;&lt;span style=&quot; font-family:'Courier New'; font-size:10pt; color:#000000;&quot;&gt;;&lt;/span&gt;&lt;span style=&quot; font-size:8pt;&quot;&gt; &lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot; margin-top:12px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;&lt;span style=&quot; font-family:'Courier New'; font-size:10pt; color:#000000;&quot;&gt;  }   &lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot; margin-top:12px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;&lt;span style=&quot; font-family:'Courier New'; font-size:10pt; color:#000000;&quot;&gt;  s.&lt;/span&gt;&lt;span style=&quot; font-family:'Courier New'; font-size:10pt; color:#06287e;&quot;&gt;dist&lt;/span&gt;&lt;span style=&quot; font-family:'Courier New'; font-size:10pt; color:#000000;&quot;&gt; = &lt;/span&gt;&lt;span style=&quot; font-family:'Courier New'; font-size:10pt; color:#40a070;&quot;&gt;0&lt;/span&gt;&lt;span style=&quot; font-family:'Courier New'; font-size:10pt; color:#000000;&quot;&gt;;&lt;/span&gt;&lt;span style=&quot; font-size:8pt;&quot;&gt; &lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot; margin-top:12px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;&lt;span style=&quot; font-family:'Courier New'; font-size:10pt; color:#000000;&quot;&gt; &lt;/span&gt;&lt;span style=&quot; font-size:8pt;&quot;&gt; &lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot; margin-top:12px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;&lt;span style=&quot; font-family:'Courier New'; font-size:10pt; color:#000000;&quot;&gt;  &lt;/span&gt;&lt;span style=&quot; font-family:'Courier New'; font-size:10pt; font-weight:600; color:#007020;&quot;&gt;while&lt;/span&gt;&lt;span style=&quot; font-family:'Courier New'; font-size:10pt; color:#000000;&quot;&gt; (!queue.&lt;/span&gt;&lt;span style=&quot; font-family:'Courier New'; font-size:10pt; color:#06287e;&quot;&gt;isEmpty&lt;/span&gt;&lt;span style=&quot; font-family:'Courier New'; font-size:10pt; color:#000000;&quot;&gt;()) {&lt;/span&gt;&lt;span style=&quot; font-size:8pt;&quot;&gt; &lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot; margin-top:12px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;&lt;span style=&quot; font-family:'Courier New'; font-size:10pt; color:#000000;&quot;&gt;    u = queue.&lt;/span&gt;&lt;span style=&quot; font-family:'Courier New'; font-size:10pt; color:#06287e;&quot;&gt;extractMin&lt;/span&gt;&lt;span style=&quot; font-family:'Courier New'; font-size:10pt; color:#000000;&quot;&gt;();&lt;/span&gt;&lt;span style=&quot; font-size:8pt;&quot;&gt; &lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot; margin-top:12px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;&lt;span style=&quot; font-family:'Courier New'; font-size:10pt; color:#000000;&quot;&gt;    &lt;/span&gt;&lt;span style=&quot; font-family:'Courier New'; font-size:10pt; font-weight:600; color:#007020;&quot;&gt;for&lt;/span&gt;&lt;span style=&quot; font-family:'Courier New'; font-size:10pt; color:#000000;&quot;&gt; (each vertex v adjacent to u)&lt;/span&gt;&lt;span style=&quot; font-size:8pt;&quot;&gt; &lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot; margin-top:12px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;&lt;span style=&quot; font-family:'Courier New'; font-size:10pt; color:#000000;&quot;&gt;      &lt;/span&gt;&lt;span style=&quot; font-family:'Courier New'; font-size:10pt; color:#06287e;&quot;&gt;relax&lt;/span&gt;&lt;span style=&quot; font-family:'Courier New'; font-size:10pt; color:#000000;&quot;&gt;(u, v);&lt;/span&gt;&lt;span style=&quot; font-size:8pt;&quot;&gt; &lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot; margin-top:12px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;&lt;span style=&quot; font-family:'Courier New'; font-size:10pt; color:#000000;&quot;&gt;  }&lt;/span&gt;&lt;span style=&quot; font-size:8pt;&quot;&gt; &lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot; margin-top:12px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;&lt;span style=&quot; font-family:'Courier New'; font-size:10pt; color:#000000;&quot;&gt;}&lt;/span&gt;&lt;span style=&quot; font-size:8pt;&quot;&gt; &lt;/span&gt;&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
   </property>
  </widget>
  <widget class="QWidget" name="dijkstraAnimAreaPane" native="true">
   <property name="geometry">
    <rect>
     <x>10</x>
     <y>110</y>
     <width>691</width>
     <height>411</height>
    </rect>
   </property>
   <widget class="QGraphicsView" name="dijkstraAnimArea">
    <property name="geometry">
     <rect>
      <x>0</x>
      <y>0</y>
      <width>701</width>
      <height>411</height>
     </rect>
    </property>
   </widget>
  </widget>
  <widget class="Line" name="dijkstraAnimTextAreaSeparator">
   <property name="geometry">
    <rect>
     <x>695</x>
     <y>110</y>
     <width>31</width>
     <height>411</height>
    </rect>
   </property>
   <property name="orientation">
    <enum>Qt::Vertical</enum>
   </property>
  </widget>
  <widget class="QPlainTextEdit" name="dijkstraPlainTextEdit">
   <property name="geometry">
    <rect>
     <x>720</x>
     <y>130</y>
     <width>371</width>
     <height>171</height>
    </rect>
   </property>
   <property name="readOnly">
    <bool>true</bool>
   </property>
  </widget>
  <widget class="QWidget" name="layoutWidget">
   <property name="geometry">
    <rect>
     <x>10</x>
     <y>10</y>
     <width>691</width>
     <height>97</height>
    </rect>
   </property>
   <layout class="QVBoxLayout" name="dijkstraHeaderAndControlPane">
    <item>
     <widget class="QLabel" name="dijkstraHeaderLabel">
      <property name="layoutDirection">
       <enum>Qt::RightToLeft</enum>
      </property>
      <property name="text">
       <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;&lt;span style=&quot; font-size:11pt; font-weight:600;&quot;&gt;DIJKSTRA's SHORTEST PATH FINDING ALGORITHM&lt;/span&gt;&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
      </property>
      <property name="alignment">
       <set>Qt::AlignCenter</set>
      </property>
     </widget>
    </item>
    <item>
     <layout class="QHBoxLayout" name="dijkstraControlPane">
      <item>
       <widget class="QLineEdit" name="dijkstraInsertLineEdit">
        <property name="whatsThis">
         <string/>
        </property>
        <property name="inputMask">
         <string/>
        </property>
        <property name="text">
         <string/>
        </property>
       </widget>
      </item>
      <item>
       <widget class="QPushButton" name="dijkstraInsertBtn">
        <property name="text">
         <string>Run</string>
        </property>
       </widget>
      </item>
      <item>
       <widget class="Line" name="dijkstraInsertNewGraphSepLine">
        <property name="orientation">
         <enum>Qt::Vertical</enum>
        </property>
       </widget>
      </item>
      <item>
       <widget class="QPushButton" name="dijkstraNewGraphBtn">
        <property name="enabled">
         <bool>false</bool>
        </property>
        <property name="text">
         <string>New Graph</string>
        </property>
       </widget>
      </item>
     </layout>
    </item>
   </layout>
  </widget>
  <widget class="QPushButton" name="dijkstraHomeBtn">
   <property name="geometry">
    <rect>
     <x>710</x>
     <y>10</y>
     <width>75</width>
     <height>23</height>
    </rect>
   </property>
   <property name="text">
    <string>Home</string>
   </property>
  </widget>
 </widget>
 <resources/>
 <connections/>
</ui>
